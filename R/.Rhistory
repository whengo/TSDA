r
version
demo()
install.packages('yaml', 'RJSONIO', 'RCurl')
install.packages('yaml', 'RJSONIO', 'RCurl')
install.packages('yaml', 'RJSONIO', 'RCurl')
install.packages('yaml', 'RJSONIO', 'RCurl')
library(yaml)
install.packages('yaml')
install.packages('RJSONIO')
install.packages('RCurl')
require(devtools)
install_github('RPentaho', 'piersharding')
install.packages('devtools')
library(devtools)
require(devtools)
install.packages('devtools')
require(devtools)
install_github('RPentaho', 'piersharding')
install_github('piersharding/RPentaho')
install.packages('RPentaho', repos=c('http://piersharding.com/R'))
require('RPentaho')
require('RPentaho')
install.packages('RPentaho', repos=c('http://piersharding.com/R'))
require('RPentaho')
install.packages('RPentaho', repos=c('http://piersharding.com/R'))
require('rpentaho')
require('rPentaho')
require('RPentaho')
library(devtools)
install_github('RPentaho', username='piersharding')
require('RPentaho')
install.packages(
c("RPentaho"),
repos = c("http://piersharding.com/R"),
)
install.packages(
c("RPentaho"),
repos = c("http://piersharding.com/R"),
)
install.packages(
c("RPentaho"),
repos = c("http://piersharding.com/R"),
)
library(devtools)
install_github('RPentaho', username='piersharding')
library(RODBC)
install.packages("RODBC")
install.packages("RODBC")
library(RODBC)
install.packages("RSQLServer")
library(RSQLServer)
install.packages("RSQLServer")
library(RSQLServer)
library(DBI)
library(RSQLServer)
library(dplyr)
library(RSQLServer)
pkg_url <- "https://cran.rstudio.com/src/contrib/Archive/dplyr/dplyr_0.4.3.tar.gz"
install.packages(pkg_url, repos = NULL, type = "source")
library(RSQLServer)
pkg_url <- "https://cran.rstudio.com/src/contrib/Archive/dplyr/dplyr_0.4.3.tar.gz"
install.packages(pkg_url, repos = NULL, type = "source")
library(RSQLServer)
remove.packages("dplyr", lib="~/R/win-library/3.3")
pkg_url <- "https://cran.rstudio.com/src/contrib/Archive/dplyr/dplyr_0.4.3.tar.gz"
install.packages(pkg_url, repos = NULL, type = "source")
library(dplyr)
library(RSQLServer)
library(dplyr)
pkg_url <- "https://cran.rstudio.com/src/contrib/Archive/dplyr/dplyr_0.4.3.tar.gz"
install.packages(pkg_url, repos = NULL, type = "source")
library(dplyr)
install.packages("dplyr")
library(dplyr)
pkg_url <- "https://cran.rstudio.com/src/contrib/Archive/dplyr/dplyr_0.4.3.tar.gz"
install.packages(pkg_url, repos = NULL, type = "source")
pkg_url <- "https://cran.rstudio.com/src/contrib/Archive/dplyr/dplyr_0.4.3.tar.gz"
install.packages(pkg_url, repos = NULL, type = "source")
age1<- 1:3
age2<-(1:3)*2
data<-data.frame(age1,age2)
data[1]
class(data[1])
data
data2<-as.matrix(data)
data2
class(data2)
data2[,1]
data2[,2]
data[1,]
class(data[1,])
install.packages("irr")
library(irr)
irr
install.packages("FinCal")
demo(graphics)
class(data[1,])
?scale
a<-1:2;
b=3:4;
mydata<-as.data.frame(a,b);
mydata<-as.data.frame(cbind(a,b));
mydata:
mydata
t=cbind(a,b);
t;
class(t);
scale(t);
d<-scale(t);
mean(d);
sd(d);
?cor
a<-1:10;
b=11ï¼š20;
t=cbind(a,b);
t;
class(t);
d<-scale(t);
d;
t;
d;
cor(d);
eigen(cor(d));
r<-eigen(cor(d));
r$values*r$vectors
sqrt(r$values)*r$vectors
r$values*r$vectors
cor(d)*r$vectors
cor(d)*r$values
r$values;
r$vectors;
r$values*r$vectors-cor(d);
r$values*r$vectors
cor(d;)
cor(d);
e<-cor(d);
r$values*r$vectors-e*r$vectors
r$values*r$vectors-t(e)*r$vectors
?eigen
v<-r$vectors;
lam<-r$values;
v*lam*v^(-1);
v*lam*v^(-1)-e;
e;
v*lam*v^(-1)+e;
?diag
lam
diag(lam);
v*diag(lam)*v^(-1);
e;
v*diag(lam)*v^(-1)-e;
diag(lam)*v-e*v
diag(lam)*v-e
diag(lam)*v-e*v;
i=c(1,1);
li=diag(i);
li=diag(i);li;
(e-lam*li)*v;
install.packages("Cairo")
library(cario)
library(Cario)
library(Cairo)
install.packages("Cairo")
install.packages("Cairo")
library(Cairo)
Cairo.capabilities()
x<-rnorm(100);
y<-rnorm(100);
CairoPNG(filename = "Cairotest.png",width = 400,height = 300);
plot(x,y,col="ff000018",pch=19,cex=2,main="Cairo");
plot(x,y,col="#ff000018",pch=19,cex=2,main="Cairo");
dev.off();
getwd()
a<-list(a1=c(1,23),b2=c(4,5,6));
a$b;
a<-rnorm(10000);
a;
plot(a);
hist(a);
hist(density(a));
plot(density(a));
plot(a);
hist(a);
plot(density(a));
a<-c(1,3,5);
b<-(2,5,12);
b<-(2,5,12);
b<-c(2,5,12);
plot(a,b);
plot(a,b,type="l");
lm(b~a);
2+3;
2*5;
2**4;
plot(a,b,type="l",col="blue");
plot(a,b,type="l",col="red");
plot(a,b,type="l",col="red",xlab="test 1");
plot(a,b,type="l",col="red",xlab="test 1",ylab="sunxu");
plot(a,b,type="l",col="red",xlab="test 1",ylab="sunxu",main="we can do  it!!");
180+440+
0
plot(a,b,type="l",col="red",xlab="test 1",ylab="sunxu",main="we can do  it!!");
1219+2068
60.8+75.8+68.5+104.8+96
50+73+42+25+50+55+10+26+65
install.packages("JIEBAR")
install.packages("JIEBAR")
install.packages("jiebaR")
library(jiebaR);
install.packages("tm");
install.packages("slam");
installed.packages();
installed.packages("tree");
exists("tree");
library("tree");
install.packages("tree");
c("rpart","tree","C50")
c("rpart","tree","C50") ->pkgs
install.packages(pkgs);
install.packages(pkgs);
c("rpart","tree","C50") ->onetree;
c("randomforest","ranger");
# c("randomforest","ranger") ->more.trees
#c("gbm","xgboost");
a<-c(1,2,3,4,5)
b<-c(3,4,5,6,9)
plot(b,a);
lm(b~a);
X<-2
X
X<-3;
X;
getwd()
setwd("C:/data/github_local_win/TSDA/R")
setwd("C:/data/github_local_win/TSDA/R");
func <-function (x)
{
return (sum(is.na(x)))
}
func(c(1,2,3,NA,4,NA));
getwd()
na.count <-function(x)
{return (sum(is.na(x)))}
x<-c(NA,NA,12,3,2);
na.count(x);
source("func_libs.r");
na.count(c(NA,NA,NA,NA,1,2));
na_count <- apply(X = Cars93,MARGIN = 2,FUN = na.count);
na_count <- apply(X = Cars,MARGIN = 2,FUN = na.count);
library(MASS)
na_count <- apply(X = Cars93,MARGIN = 2,FUN = na.count);
na_count;
class(na_count);
na_count[na_count>0];
dim(Cars93);
na_count_row <-append(X=Cars93,1,na.count);
na_count_row <-append(X=Cars93,MARGIN=1,FUN=na.count);
(na_count_row <-apply(X=Cars93,MARGIN=1,FUN=na.count));
